import React, { useEffect, useRef } from 'react';

// HOC –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
export function withPerformanceTracking<T extends object>(
  Component: React.ComponentType<T>,
  componentName: string
) {
  return React.memo((props: T) => {
    const renderStartRef = useRef<number>(0);
    
    useEffect(() => {
      renderStartRef.current = performance.now();
      
      return () => {
        if (renderStartRef.current) {
          const renderTime = performance.now() - renderStartRef.current;
          if (renderTime > 16) { // > 16ms = –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å 60fps
            console.warn(`üêå Slow render in ${componentName}: ${renderTime.toFixed(2)}ms`);
          }
        }
      };
    });
    
    return <Component {...props} />;
  });
}
