// src/App.tsx
import { Suspense, lazy, useCallback, useEffect, useState } from "react";
import { DebugPanel } from "./components/Debug/DebugPanel";
import { AIMissionModal } from "./components/UI/AIMissionModal";
import { AnimatedFrame } from "./components/UI/AnimatedFrame";
import { AppLoader } from "./components/UI/AppLoader";
import { DiaryPage } from "./components/UI/DiaryPage";
// –í—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–æ
// import { GossipBar } from "./components/UI/GossipBar";
import { FloatingTechArchitect } from "./components/UI/FloatingTechArchitect";
import { SpiritDialogueModal } from "./components/UI/SpiritDialogueModal";
import { SpiritVault } from "./components/UI/SpiritVault";
import { TechFeatureModal } from "./components/UI/TechFeatureModal";
import { useInitAssets } from "./hooks/useInitAssets";
import { useResetGossipOnStorage } from "./hooks/useResetGossipOnStorage";
import { AppProviders } from "./providers";
import { useAppStore } from "./store/appStore";
import { useUIStore } from "./store/uiStore";
const SpiritAtelier = lazy(() => import("./components/Atelier/SpiritAtelier"));

// üëá —Å—Ç—Ä–∏–º–∏–Ω–≥ —á–∞—Ç –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è
import { useChatStream } from "./hooks/useChatStream";
import type { Mood } from "./lib/types";

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
function getLoadingMessage(progress: number): string {
  if (progress < 30) return "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é –º–∏—Ä –¥—É—Ö–æ–≤...";
  if (progress < 60) return "–ó–∞–≥—Ä—É–∂–∞—é —Ç–µ–∫—Å—Ç—É—Ä—ã...";
  if (progress < 90) return "–ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞—é —Å—Ü–µ–Ω—É...";
  return "–ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤–æ...";
}

function App() {
  const showStorage = useUIStore((state) => state.showStorage);
  const setShowStorage = useUIStore((state) => state.setShowStorage);
  const showTechFeatures = useUIStore((state) => state.showTechFeatures);
  const setShowTechFeatures = useUIStore((state) => state.setShowTechFeatures);
  const debugMode = useAppStore((state) => state.debugMode);
  const ready = useInitAssets();
  const [appProgress, setAppProgress] = useState(0);
  const [selectedSpiritForChat, setSelectedSpiritForChat] = useState<
    string | null
  >(null);

  // üëá –ª–æ–∫–∞–ª—å–Ω—ã–π –∫—ç—à —Å–≤–µ–¥–µ–Ω–∏–π –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –¥—É—Ö–µ (–¥–ª—è –ø–æ–¥—Å–∫–∞–∑–æ–∫/–ø–µ—Ä—Å–æ–Ω—ã)
  const [activeSpiritMood, setActiveSpiritMood] = useState<Mood | undefined>(
    undefined
  );
  const [activeSpiritEssence, setActiveSpiritEssence] = useState<
    string | undefined
  >(undefined);
  const [activeSpiritOriginText, setActiveSpiritOriginText] = useState<
    string | undefined
  >(undefined);
  const [activeSpiritBirthDate, setActiveSpiritBirthDate] = useState<
    string | undefined
  >(undefined);

  // üëá —Å—Ç—Ä–∏–º-—á–∞—Ç (AAA –æ—â—É—â–µ–Ω–∏–µ "–¥—É—Ö –ø–µ—á–∞—Ç–∞–µ—Ç")
  const {
    text: streamingText,
    isStreaming,
    error: streamError,
    start: startStream,
    cancel: cancelStream,
    setText,
  } = useChatStream();

  useResetGossipOnStorage(showStorage);

  // –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  useEffect(() => {
    if (!ready) {
      const interval = setInterval(() => {
        setAppProgress((prev) => {
          const next = prev + Math.random() * 15;
          return next >= 95 ? 95 : next;
        });
      }, 200);
      return () => clearInterval(interval);
    } else {
      setAppProgress(100);
    }
  }, [ready]);

  // üëá —Ö–µ–Ω–¥–ª–µ—Ä –≤—ã–±–æ—Ä–∞ –¥—É—Ö–∞ –∏–∑ –í–æ–ª—å—Ç–∞: –ø–æ–¥—Ç—è–≥–∏–≤–∞–µ–º –º–∏–Ω–∏–º—É–º –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
  const handleSelectSpiritForChat = useCallback(async (spiritId: string) => {
    setSelectedSpiritForChat(spiritId);

    // –ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å —Å—Ç–æ—Ä / API, –æ—Ç–∫—É–¥–∞ –º–æ–∂–Ω–æ –≤–∑—è—Ç—å –º–µ—Ç—É –¥—É—Ö–∞ ‚Äî –ø–æ–¥—Ç—è–Ω–∏:
    // –ó–¥–µ—Å—å –æ—Å—Ç–∞–≤–ª–µ–Ω–æ –∫–∞–∫ –ø—Ä–∏–º–µ—Ä ‚Äî –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Å–≤–æ–π –∏—Å—Ç–æ—á–Ω–∏–∫.
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: –º–æ–∂–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å –≤ store.byId[spiritId].
    try {
      // –ü—Ä–∏–º–µ—Ä: –µ—Å–ª–∏ spirit —Ö—Ä–∞–Ω–∏—Ç originText, –º–æ–∂–Ω–æ –ø–µ—Ä–µ-–∞–Ω–∞–ª–∏–∑ —Å–¥–µ–ª–∞—Ç—å 1 —Ä–∞–∑
      // —á—Ç–æ–±—ã –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞—Ç—å mood/essence –ø–æ —Å–≤–µ–∂–µ–π —Å—Ö–µ–º–µ (–∫—ç—à –Ω–∞ –±—ç–∫–µ —Å–ø–∞—Å—ë—Ç):
      // const analyzed = await analyzeText({ text: originText });
      // setActiveSpiritMood(analyzed.mood);
      // setActiveSpiritEssence(analyzed.essence);
      // setActiveSpiritOriginText(originText);
      // setActiveSpiritBirthDate(new Date().toISOString());

      // –ü–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∏ (–Ω–µ –º–µ—à–∞—é—Ç, –Ω–æ –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞—é—Ç –º–æ–¥–∞–ª–∫–µ –∫–∞–∫ —Å—Ç—Ä–æ–∏—Ç—å –ø–µ—Ä—Å–æ–Ω—É)
      setActiveSpiritMood(undefined);
      setActiveSpiritEssence(undefined);
      setActiveSpiritOriginText(undefined);
      setActiveSpiritBirthDate(undefined);
    } catch {
      // no-op
    }
  }, []);

  // üëá –∑–∞–ø—É—Å–∫ —Å—Ç—Ä–∏–º–∞ –≤ —É–¥–æ–±–Ω–æ–º –≤–∏–¥–µ –¥–ª—è –º–æ–¥–∞–ª–∫–∏/–∫–Ω–æ–ø–æ–∫
  const startSpiritChatStream = useCallback(
    async (payload: {
      text: string;
      mood?: Mood;
      essence?: string;
      history?: string[];
      originText?: string;
      birthDate?: string;
    }) => {
      // —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ, —Å—Ç–∞—Ä—Ç—É–µ–º –Ω–æ–≤–æ–µ
      setText("");
      await startStream({
        text: payload.text,
        mood: payload.mood ?? activeSpiritMood,
        essence: payload.essence ?? activeSpiritEssence,
        history: payload.history ?? [],
        originText: payload.originText ?? activeSpiritOriginText,
        birthDate: payload.birthDate ?? activeSpiritBirthDate,
      });
    },
    [
      startStream,
      setText,
      activeSpiritMood,
      activeSpiritEssence,
      activeSpiritOriginText,
      activeSpiritBirthDate,
    ]
  );

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º AppLoader –ø–æ–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –≥–æ—Ç–æ–≤–æ
  if (!ready) {
    return (
      <AppProviders config={{ debugMode: import.meta.env.DEV }}>
        <AppLoader
          isVisible={true}
          progress={appProgress}
          message={getLoadingMessage(appProgress)}
        />
      </AppProviders>
    );
  }

  return (
    <AppProviders
      config={{
        debugMode: import.meta.env.DEV,
        theme: "dark",
        enableAnalytics: import.meta.env.PROD,
      }}
    >
      <div className="relative w-screen h-screen overflow-visible">
        <SpiritVault
          isOpen={showStorage}
          onClose={() => setShowStorage(false)}
          onSelectSpiritForChat={handleSelectSpiritForChat}
        />

        <Suspense
          fallback={
            <div className="absolute inset-0 flex items-center justify-center text-indigo-400 text-xl">
              –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ü–µ–Ω—ã...
            </div>
          }
        >
          <SpiritAtelier />
        </Suspense>

        {/* –í—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–æ - –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –∏–¥–µ—è
        {!showStorage && <GossipBar />}
        */}

        {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –¥—É—Ö–∞ –¥–ª—è —á–∞—Ç–∞ */}
        {selectedSpiritForChat && !showStorage && (
          <AnimatedFrame
            variant="primary"
            className="fixed top-6 right-6 z-30 p-3"
          >
            <div className="flex items-center gap-3">
              <div
                className={`w-3 h-3 ${
                  isStreaming ? "bg-amber-400" : "bg-green-400"
                } rounded-full animate-pulse shadow-[0_0_10px_rgba(250,204,21,0.9)]`}
              ></div>
              <span className="text-white text-sm font-medium">
                {isStreaming ? "–î—É—Ö –æ—Ç–≤–µ—á–∞–µ—Ç‚Ä¶" : "–ê–∫—Ç–∏–≤–Ω—ã–π –¥—É—Ö –¥–ª—è –±–µ—Å–µ–¥—ã"}
              </span>
              <button
                onClick={() => setSelectedSpiritForChat(null)}
                className="ml-2 text-gray-400 hover:text-white transition-colors hover:scale-110"
                title="–°–Ω—è—Ç—å –≤—ã–¥–µ–ª–µ–Ω–∏–µ –¥—É—Ö–∞"
              >
                ‚úï
              </button>
            </div>
          </AnimatedFrame>
        )}

        {/* üëá –ú–æ–¥–∞–ª–∫–∞ –¥–∏–∞–ª–æ–≥–∞ —Ç–µ–ø–µ—Ä—å —É–º–µ–µ—Ç —Å—Ç—Ä–∏–º ‚Äî –ø–µ—Ä–µ–¥–∞—ë–º –≤—Å–µ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã */}
        <SpiritDialogueModal
          showStorage={showStorage}
          selectedSpiritId={selectedSpiritForChat}
          // –ù–æ–≤—ã–µ –ø—Ä–æ–ø—ã –¥–ª—è —Å—Ç—Ä–∏–º–∞:
          onStreamStart={startSpiritChatStream}
          onStreamCancel={cancelStream}
          isStreaming={isStreaming}
          streamingText={streamingText}
          streamError={streamError || undefined}
          // –ü–æ–¥—Å–∫–∞–∑–∫–∏ –ø–æ –ø–µ—Ä—Å–æ–Ω–µ –¥—É—Ö–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
          persona={{
            mood: activeSpiritMood,
            essence: activeSpiritEssence,
            originText: activeSpiritOriginText,
            birthDate: activeSpiritBirthDate,
          }}
        />

        <DiaryPage showStorage={showStorage} />

        {/* Debug Panel - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏–ª–∏ –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω debug mode */}
        {(import.meta.env.DEV || debugMode) && (
          <DebugPanel isVisible={true} position="bottom-right" />
        )}

        {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π - —Ä–µ–Ω–¥–µ—Ä–∏–º –≤ —Å–∞–º–æ–º –∫–æ–Ω—Ü–µ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ z-index */}
        {!showStorage && !showTechFeatures && (
          <div className="fixed top-6 left-6 z-[9999] pointer-events-auto flex gap-3">
            <GalaxyLauncher />
            <VaultTechLauncher />
            <AIMissionLauncher />
          </div>
        )}

        {/* TechFeature –º–æ–¥–∞–ª–∫–∞ */}
        <TechFeatureModal
          show={showTechFeatures}
          onClose={() => setShowTechFeatures(false)}
        />

        {/* Floating Tech Architect - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ –æ—Ç–∫—Ä—ã—Ç–æ —Ç–µ—Ö —Ö—Ä–∞–Ω–∏–ª–∏—â–µ */}
        {showTechFeatures && <FloatingTechArchitect />}

        {/* –ú–æ–¥–∞–ª–∫–∞ AI‚Äë–º–∏—Å—Å–∏–∏ */}
        <AIMissionModal />
      </div>
    </AppProviders>
  );
}

export default App;

// üåå GALAXY LAUNCHER - –ö–ò–ë–ï–† –ì–ê–õ–ê–ö–¢–ò–ö–ê!
const GalaxyLauncher: React.FC = () => {
  const setShowStorage = useUIStore((s) => s.setShowStorage);
  return (
    <button
      className="group relative px-5 py-3 text-white font-bold text-sm rounded-xl hover:scale-105 transition-all duration-300 shadow-2xl border-2 backdrop-blur-md overflow-hidden"
      onClick={() => setShowStorage(true)}
      style={{
        position: "relative",
        zIndex: 10000,
        background:
          "linear-gradient(135deg, #1e1b4b 0%, #312e81 25%, #3730a3 50%, #1d4ed8 75%, #2563eb 100%)",
        borderImage: "linear-gradient(45deg, #60a5fa, #a78bfa, #f472b6) 1",
        boxShadow: "0 0 30px rgba(59, 130, 246, 0.5)",
      }}
      title="–û—Ç–∫—Ä—ã—Ç—å –ì–∞–ª–∞–∫—Ç–∏–∫—É –î—É—Ö–æ–≤"
    >
      {/* –ó–≤—ë–∑–¥–Ω–æ–µ –ø–æ–ª–µ */}
      <div className="absolute inset-0 opacity-30">
        {[...Array(15)].map((_, i) => (
          <div
            key={i}
            className="absolute w-1 h-1 bg-white rounded-full animate-ping"
            style={{
              left: `${Math.random() * 100}%`,
              top: `${Math.random() * 100}%`,
              animationDelay: `${Math.random() * 3}s`,
              animationDuration: `${1 + Math.random() * 2}s`,
            }}
          />
        ))}
      </div>

      {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –Ω–µ–æ–Ω–æ–≤—ã–π –≥—Ä–∞–¥–∏–µ–Ω—Ç */}
      <div className="absolute inset-0 opacity-0 group-hover:opacity-100 bg-gradient-to-r from-cyan-500/20 via-purple-500/20 to-pink-500/20 animate-pulse transition-opacity duration-300" />

      <div className="relative z-10 flex items-center gap-2">
        <span
          className="text-xl animate-spin"
          style={{ animationDuration: "3s" }}
        >
          üåå
        </span>
        <span className="font-mono uppercase tracking-wider">
          Neural Galaxy
        </span>
        <span className="text-lg animate-bounce">‚ú®</span>
      </div>
    </button>
  );
};

// –õ–æ–∫–∞–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞‚Äë–ª–∞–Ω—á–µ—Ä –¥–ª—è AI‚Äë–º–∏—Å—Å–∏–∏ (–æ—Ç–¥–µ–ª—å–Ω–æ, —á—Ç–æ–±—ã –Ω–µ –∑–∞—Å–æ—Ä—è—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç App)
const AIMissionLauncher: React.FC = () => {
  const setShowMission = useUIStore((s) => s.setShowMission);
  return (
    <button
      className="group relative px-5 py-3 text-white font-bold text-sm rounded-xl hover:scale-105 transition-all duration-300 shadow-2xl border-2 backdrop-blur-md overflow-hidden"
      onClick={() => setShowMission(true)}
      style={{
        position: "relative",
        zIndex: 10000,
        background:
          "linear-gradient(135deg, #065f46 0%, #047857 25%, #059669 50%, #10b981 75%, #34d399 100%)",
        borderImage: "linear-gradient(45deg, #6ee7b7, #34d399, #a7f3d0) 1",
        boxShadow: "0 0 30px rgba(52, 211, 153, 0.5)",
      }}
      title="–ó–∞–ø—É—Å—Ç–∏—Ç—å AI‚Äë–º–∏—Å—Å–∏—é"
    >
      {/* –ù–µ–π—Ä–æ–Ω–Ω–∞—è —Å–µ—Ç—å —Ñ–æ–Ω */}
      <div className="absolute inset-0 opacity-20">
        <svg className="w-full h-full">
          {[...Array(8)].map((_, i) => (
            <circle
              key={i}
              cx={`${20 + (i % 3) * 30}%`}
              cy={`${30 + Math.floor(i / 3) * 30}%`}
              r="2"
              fill="currentColor"
              className="animate-pulse"
              style={{ animationDelay: `${i * 0.2}s` }}
            />
          ))}
        </svg>
      </div>

      {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–ª–µ—Å–∫ */}
      <div className="absolute inset-0 opacity-0 group-hover:opacity-100 bg-gradient-to-r from-transparent via-white/20 to-transparent animate-shine" />

      <div className="relative z-10 flex items-center gap-2">
        <span className="text-lg animate-bounce">üöÄ</span>
        <span className="font-mono uppercase tracking-wider">AI Mission</span>
        <span className="text-lg animate-pulse">ü§ñ</span>
      </div>
    </button>
  );
};

// üöÄ VAULT TECH LAUNCHER - –ú–ï–ì–ê –≠–ü–ò–ß–ù–ê–Ø –ö–ù–û–ü–ö–ê!
const VaultTechLauncher: React.FC = () => {
  const setShowTechFeatures = useUIStore((s) => s.setShowTechFeatures);
  return (
    <button
      className="group relative px-5 py-3 text-white font-bold text-sm rounded-xl hover:scale-105 transition-all duration-300 shadow-2xl border-2 backdrop-blur-md overflow-hidden"
      onClick={() => setShowTechFeatures(true)}
      style={{
        position: "relative",
        zIndex: 10000,
        background:
          "linear-gradient(135deg, #7c2d12 0%, #dc2626 25%, #ea580c 50%, #f59e0b 75%, #eab308 100%)",
        borderImage: "linear-gradient(45deg, #fbbf24, #f59e0b, #dc2626) 1",
        boxShadow: "0 0 30px rgba(245, 158, 11, 0.5)",
      }}
      title="–û—Ç–∫—Ä—ã—Ç—å VAULT TECH"
    >
      {/* –ö–∏–±–µ—Ä-—Å–µ—Ç–∫–∞ —Ñ–æ–Ω */}
      <div
        className="absolute inset-0 opacity-20"
        style={{
          backgroundImage: `
          linear-gradient(rgba(255, 255, 255, 0.1) 1px, transparent 1px),
          linear-gradient(90deg, rgba(255, 255, 255, 0.1) 1px, transparent 1px)
        `,
          backgroundSize: "8px 8px",
        }}
      />

      {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–ª–µ—Å–∫ */}
      <div className="absolute inset-0 opacity-0 group-hover:opacity-100 bg-gradient-to-r from-transparent via-white/20 to-transparent animate-shine" />

      <div className="relative z-10 flex items-center gap-2">
        <span className="text-lg animate-bounce">‚ö°</span>
        <span className="font-mono uppercase tracking-wider">Vault Tech</span>
        <span className="text-lg animate-pulse">üß†</span>
      </div>
    </button>
  );
};
