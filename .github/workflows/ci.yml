name: 🔄 Continuous Integration

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master]

env:
  NODE_VERSION: "20"
  CACHE_DEPENDENCY_PATH: "**/package-lock.json"

jobs:
  # 🧪 Quality checks and tests
  quality:
    name: 🔍 Code Quality & Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20]

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: ${{ env.CACHE_DEPENDENCY_PATH }}

      - name: 📦 Install Dependencies (Frontend)
        run: npm ci --ignore-engines --no-audit --no-fund

      - name: 📦 Install Dependencies (Backend)
        run: npm ci --ignore-engines --no-audit --no-fund
        working-directory: whisp-server

      - name: 🔍 ESLint Check
        run: npm run lint

      - name: 🧪 Run Tests (Frontend)
        run: npm test -- --coverage --watchAll=false
        env:
          CI: true

      - name: 🧪 Run Tests (Backend)
        run: npm test
        working-directory: whisp-server
        env:
          CI: true
          MOCK_OPENAI: 1

      - name: 📊 Upload Coverage Reports
        if: matrix.node-version == 20
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage/lcov.info
          fail_ci_if_error: false
        continue-on-error: true

      - name: 🏗️ Build Check
        run: npm run build

      - name: 📈 Bundle Size Check
        if: matrix.node-version == 20
        run: |
          npm run build
          echo "📊 Build completed, checking bundle sizes..."
          ls -la dist/assets/
        continue-on-error: true

  # 🔒 Security scan
  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📦 Install Dependencies
        run: npm ci

      - name: 🔍 Audit Dependencies (Frontend)
        run: npm audit --audit-level=high
        continue-on-error: true

      - name: 🔍 Audit Dependencies (Backend)
        run: |
          cd whisp-server
          npm ci
          npm audit --audit-level=high
        continue-on-error: true

  # 📋 Code Quality Analysis
  code-quality:
    name: 📋 Code Quality Analysis
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📦 Install Dependencies
        run: npm ci

      - name: 🧪 Run Tests with Coverage
        run: npm test -- --coverage --watchAll=false
        env:
          CI: true
